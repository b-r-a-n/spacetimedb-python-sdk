# THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
# WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

from __future__ import annotations
from typing import List, Iterator, Callable

from spacetimedb_sdk.spacetimedb_client import SpacetimeDBClient, Identity, Address
from spacetimedb_sdk.spacetimedb_client import ReducerEvent
from .point import Point

class Player:
	is_table_class = True

	primary_key = "owner_id"

	@classmethod
	def register_row_update(cls, callback: Callable[[str,Player,Player,ReducerEvent], None]):
		SpacetimeDBClient.instance._register_row_update("Player",callback)

	@classmethod
	def iter(cls) -> Iterator[Player]:
		return SpacetimeDBClient.instance._get_table_cache("Player").values()

	@classmethod
	def filter_by_owner_id(cls, owner_id) -> Player:
		return next(iter([column_value for column_value in SpacetimeDBClient.instance._get_table_cache("Player").values() if column_value.owner_id == owner_id]), None)

	@classmethod
	def filter_by_name(cls, name) -> List[Player]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("Player").values() if column_value.name == name]

	def __init__(self, data: List[object]):
		self.data = {}
		self.data["owner_id"] = str(data[0])
		self.data["name"] = str(data[1])
		self.data["location"] = Point(data[2])

	def encode(self) -> List[object]:
		return [self.owner_id, self.name, self.location.encode()]

	def __getattr__(self, name: str):
		return self.data.get(name)
