# THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
# WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

from __future__ import annotations
from typing import List, Iterator, Callable

from spacetimedb_sdk.spacetimedb_client import SpacetimeDBClient, Identity, Address
from spacetimedb_sdk.spacetimedb_client import ReducerEvent

class Message:
	is_table_class = True

	@classmethod
	def register_row_update(cls, callback: Callable[[str,Message,Message,ReducerEvent], None]):
		SpacetimeDBClient.instance._register_row_update("Message",callback)

	@classmethod
	def iter(cls) -> Iterator[Message]:
		return SpacetimeDBClient.instance._get_table_cache("Message").values()

	@classmethod
	def filter_by_sender(cls, sender) -> List[Message]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("Message").values() if column_value.sender == sender]

	@classmethod
	def filter_by_sent(cls, sent) -> List[Message]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("Message").values() if column_value.sent == sent]

	@classmethod
	def filter_by_text(cls, text) -> List[Message]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("Message").values() if column_value.text == text]

	def __init__(self, data: List[object]):
		self.data = {}
		self.data["sender"] = Identity.from_string(data[0][0])
		self.data["sent"] = int(data[1])
		self.data["text"] = str(data[2])

	def encode(self) -> List[object]:
		return [self.sender, self.sent, self.text]

	def __getattr__(self, name: str):
		return self.data.get(name)
