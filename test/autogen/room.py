# THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
# WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

from client_cache import ClientCache
from .exit import Exit

class Room:
	is_table_class = True

	@classmethod
	def iter(cls):
		return ClientCache.instance.get_table_cache("Room").values()

	@classmethod
	def filter_by_room_id(cls, room_id):
		return next(iter([column_value for column_value in ClientCache.instance.get_table_cache("Room").values() if column_value.room_id == room_id]), None)

	@classmethod
	def filter_by_name(cls, name):
		return [column_value for column_value in ClientCache.instance.get_table_cache("Room").values() if column_value.name == name]

	@classmethod
	def filter_by_description(cls, description):
		return [column_value for column_value in ClientCache.instance.get_table_cache("Room").values() if column_value.description == description]

	@classmethod
	def filter_by_exits(cls, exits):
		return [column_value for column_value in ClientCache.instance.get_table_cache("Room").values() if column_value.exits == exits]

	@classmethod
	def filter_by_spawnable_entities(cls, spawnable_entities):
		return [column_value for column_value in ClientCache.instance.get_table_cache("Room").values() if column_value.spawnable_entities == spawnable_entities]

	def __init__(self, data):
		self.data = {}
		self.data["room_id"] = str(data[0])
		self.data["name"] = str(data[1])
		self.data["description"] = str(data[2])
		self.data["exits"] = [Exit(item) for item in data[3]]
		self.data["spawnable_entities"] = [int(item) for item in data[4]]

	def __getattr__(self, name):
		return self.data.get(name)
